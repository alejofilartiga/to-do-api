{
    "openapi": "3.0.0",
    "info": {
      "description": "This is a sample to do API.  You can find\nout more about me at\n[Github](https://github.com/alejofilartiga)",
      "version": "1.0.0",
      "title": "to do API",
      "termsOfService": "http://swagger.io/terms/",
      "contact": {
        "email": "alejofilartiga@gmail.com"
      }
    },
    "servers": [
      {
        "url": "https://to-do-api-kappa-ruby.vercel.app"
      }
    ],
    "tags": [
      {
        "name": "task",
        "description": "task managing API",
        "externalDocs": {
          "description": "Use to-do-APP",
          "url": "https://to-do-alejo.netlify.app/"
        }
      }
    ],
    "paths": {
        "/": {
            "get": {
                "tags": [
                    "task"
                ],
                "summary": "Get all tasks",
                "description": "Returns all tasks",
                "operationId": "getTasks",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            },
            "post": {
                "tags": ["task"],
                "summary": "Create a task",
                "description": "Create a new task",
                "operationId": "createTask",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Task"
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            }
        },
        "/{id}": {
            "delete": {
                "tags": ["task"],
                "summary": "Delete a task",
                "description": "Delete a task by ID",
                "operationId": "deleteTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "ID of the task to delete",
                        "type":"string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            },
            "patch":{
                "tags":["task"],
                "summary":"Update a task",
                "description":"Update a task status by ID",
                "operationId":"updateTask",
                "parameters":[
                    {
                        "name":"id",
                        "description":"ID of the task to update",
                        "in":"path",
                        "required":true,
                        "type":"string"
                    }
                ],
                "requestBody":{
                    "required":true,
                    "content":{
                        "application/json":{
                            "schema":{
                                "type":"object",
                                "properties":{
                                    "completed":{
                                        "type":"boolean",
                                        "description":"The status of the task"
                                    }
                                }
                            }
                        }

                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            }
        }
    },
    "components": {
      "schemas": {
        "Task": {
            "type": "object",
            "required": [
              "title"
            ],
            "properties": {
                "title": {
                    "type": "string",
                    "description": "The title of the task"
                },
                "completed": {
                    "type": "boolean",
                    "description": "The status of the task"
                }
            },
            "example": {
                "title": "Practice JavaScript",
                "completed": false
            }
        }
      },
      "requestBodies": {
        "Task": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          },
          "description": "Task object that needs to be added to the list",
          "required": true
        }
      }
    }
}
